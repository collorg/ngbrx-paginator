# release 0.3.0 (2023-09-20)

* Replace suffix with extension. (13200e5)
* [BREAKING CHANGE] dataSelector removed from NgbrxPaginatorModule.forFeature paginator argument. Allow reuse of a paginator. (938ddc3)
* [BREAKING CHANGE] Rename allDataSelector by dataSelector. (3058e57)
* Move initialization of the paginator into ngbrx-paginator component. (936543d)
* [breaking change] The values of a filter must be of type: { [key: string]: string;[key: number]: string }. (39ac042)
* refactor filter description component. (b110675)

## Breaking changes

### 

* The object provided to the forFeature static method has changed:
  * it now takes only two optional attributes: `filters` and `pageSizeOptions`: `allDataSelector` has been removed;
  * the optional `values` are now of type: `{ [key: string]: string;[key: number]: string }`. It was previously a list.

* The paginator is initialized in the component with `NgbrxPaginatorService.setPaginator<M>(key: string, data$: Observable<M[]>, extension?: string): Observable<M[]>`.
  This method returns the paginated data observable (see the example in the README.)
* `NgbrxPaginatorComponent` now takes an optional input `extension` to allow multiple usage of the same paginator in different contexts.
  `NgbrxPaginatorDescComponent` has also this new optional input.

# release 0.2.7 (2023-08-23)

* Add inactivate option to filter. (48db418)

# release 0.2.6 (2023-08-23)

* Remove selectedFilters (replaced by activatedFilters). (4434937)
* Move filter selector. (78aa1e0)

# release 0.2.5 (2023-08-22)

* Fix bug with old localStorage. (d5562a0)

# release 0.2.4 (2023-08-22)

* Add a filter selector to activate/inactivate a filter. (e5ed558)
* Refresh yarn install. (6e43013)
* Bump @angular and @ngrx to 16.2.0 (a246837)

# release 0.2.3 (2023-08-03)

* yarn install --upgrade (6f66a16)
* [Fix #3] Don't use localStorage if something has changed in NgbrxPaginatorModule.forFeature({key: ...}) (3b893ff)

# release 0.2.2 (2023-07-31)

* Fix bug when localStorage was not present. (82d17b8)

# release 0.2.1 (2023-07-31)

* Store pagination to localStorage. (ebf4e9c)
* Fix. Keep page number when switching from one paginator to another. (16ac821)
* Avoid multiple init of a paginator. (87bb51b)
* Add SPaginators class. (ec3673a)
* [refactor] Add filters to Pagination. (4f5daca)
* Move Pagination and initialPagination to ngbrx-paginator.model. (fd02056)
* Remove unused Set Current Paginator action. (ca76eeb)
* Use helper functions in ngbrx-paginator's reducer. (8e60769)

# release 0.2.0 (2023-07-26)

* Update README. (d62e594)
* [BREAKING CHANGE] Modify the structure of NgbrxPaginatorModule.forFeature parameter. (152f9fa)
* Remove unused code. (main) (7f02fc4)

## Breaking changes

The object passed to `NgbrxPaginatorModule.forFeature` has changed. Properties `paginators` and `key` have been removed:

* before:
  ```ts
    NgbrxPaginatorModule.forFeature({
      paginators: [ // you can have as many paginators as you need per module
        {
          // Mandatory
          key: 'Departement/Pagination', // must be unique for the app
          allDataSelector: fromDepartement.selectAll, // ngrx selector returning all the data set

          // Optional
          filters: { // You can provide more than one filter by paginator.
            'Nom': { filter: fromDepartement.byName },
            'Code': { filter: fromDepartement.byCode },
            'Régions/COM': {
              filter: fromDepartement.byRegion,
              values: fromDepartement.selectRegions // Optional: provide select values
            }
          },
          pageSizeOptions: [10, 20, 30] // Defaults to [5, 10, 25, 100]
        }
      ]
    }),
  ```
* after:
  ```ts
    NgbrxPaginatorModule.forFeature({
      'Departement/Pagination': // The name of the paginator must be unique for the application.
      {
        allDataSelector: fromDepartement.selectAll, // @ngrx selector returning all the data set

        // Optional
        filters: { // You can provide more than one filter by paginator.
          'Nom': { filter: fromDepartement.byName },
          'Code': { filter: fromDepartement.byCode },
          'Régions/COM': {
            filter: fromDepartement.byRegion,
            values: fromDepartement.selectRegions // Optional: provide select values
          }
        },
        pageSizeOptions: [10, 20, 30] // Defaults to [5, 10, 25, 100]
      } 
    }),
  ```

# release 0.1.6 (2023-07-25)

* Move toggleSelectedFilterKey click event one element up in the template. (5607a30)

# release 0.1.5 (2023-07-24)

* [temp fix] Force background-color for number of items in paginator filter desc. (HEAD -> main) (00cdbf6)
* Update images for README. (9c1ad1f)

# release 0.1.4 (2023-07-24)

* Add icons to toggle search, lock and unlock filters. (6653056)
* Use button for filter descriptor. (d026f90)
* Remove (click) and (keyup) on default option. (9dd40d7)

# release 0.1.3 (2023-07-18)

* Use $event for inputs and select. (eecfedb)

# release 0.1.2 (2023-07-17)

* Fix multiple init and keep the selected option when switching from one paginator to another. (1789e56)

# release 0.1.1 (2023-07-16)

* Remove setCurrent from departement.component.ts. (dc6c12d)

# release 0.1.0 (2023-07-16)

* Add values to a filter to use a select instead of an input. (e507f62)

## Breaking changes

A filter is now specified by an object of type {filter: FilterFunction, values?: MemoizedSelector}. The `values`, if provided will replace the `input` with a `select` from which the user can choose the filter value.

* before:
  ```ts
    NgbrxPaginatorModule.forFeature({
      paginators: [{
        key: 'Departement/Pagination',
        filters: {
          'Nom': fromDepartement.byName,
          'Code': fromDepartement.byCode,
          'Région/COM': fromDepartement.byRegion,
        },
      [...]
  ```

* now:
  ```ts
    NgbrxPaginatorModule.forFeature({
      paginators: [{
        key: 'Departement/Pagination',
        filters: {
          'Nom': { filter: fromDepartement.byName },
          'Code': { filter: fromDepartement.byCode },
          'Régions/COM': { filter: fromDepartement.byRegion, values: fromDepartement.selectRegions }
        },
      [...]
  ```

# release 0.0.15 (2023-07-14)

* Rename ngbrx-paginator-selected-filter-desc to ngbrx-paginator-filter-desc. (67517e8)
* Retains filter values for ngbrx-paginator component. (146857b)
* Add ngbrx-paginator-selected-filter-desc. (96b02d4)
* Combine filters. (e0c8141)

# release 0.0.14 (2023-07-12)

* Fix selected filter. (9613518)

# release 0.0.13 (2023-07-11)

* Remove filter from 'Feature'. (6cc4ce0)
* Allow more than one filter by paginator. (72e585a)
* Add ngbrx-paginator.model. (0376d09)
* [WIP] Rename featureKey to key and filterFunction to filters. (e34a9fd)
* Add CHANGELOG (c586306)

## Breaking changes

In NgbrxPaginatorModule.forFeature, parameter `filter` is now replaced by `filters`. 

```ts
    NgbrxPaginatorModule.forFeature({
      paginators: [{
        key: 'Departement/Pagination',
        filters: {
          'By name': fromDepartement.byName,
          'By code': fromDepartement.byCode,
          'By region': fromDepartement.byRegion
        },
        filter: fromDepartement.byName,
        allDataSelector: fromDepartement.selectAll,
        pageSizeOptions: [10, 20, 30]
      }]
    }),
```

# release 0.0.12

* Update README. (7dd993b)

# release 0.0.11

* Allow more than one paginator per module. (eced555)

## Breaking changes

NgbrxPaginatorModule.forFeature now expects a list of paginators to allow more
than one paginator by NbModule.

* before:
```ts
    NgbrxPaginatorModule.forFeature({
      key: 'Departement/Pagination',
      filterFunction: fromDepartement.filterFunction,
      allDataSelector: fromDepartement.selectAll,
      pageSizeOptions: [10, 20, 30]
    })
```
* now:
```ts
    NgbrxPaginatorModule.forFeature({
      paginators: [ // you can have as many paginators as you need per module
        {
          key: 'Departement/Pagination',
          filterFunction: fromDepartement.filterFunction,
          allDataSelector: fromDepartement.selectAll,
          pageSizeOptions: [10, 20, 30]
        }
      ]
    })
```

# release 0.0.10

* Force page to 1 if filterValue changes. (5c010fb)
* Use pagination value of page for paginationInput. (89f0dcd)
* Simplify NgbrxPaginatorComponent.setPage (removed subscribe). (e84beda)
* Only use NgbrxPaginatorService in NgbrxPaginatorComponent. No more store. (5490017)
* Lazyly loading module commune in example app. (ed52c89)
* bump semver to 7.5.3 (03b1bd9)

# Release 0.0.9

* Reset page to 1 when filter value changes. (b9e09b4)

# release 0.0.8

* Add getters and setters in NgbrxPaginatorService. (86b0e92)
* Remove feture-functions. (ee4867a)
* Fix typo in package.json (649bbb1)

# release 0.0.7

* Add numberOfFilterdItems$ and filterValue$ to NgbrxPaginatorService. (6e784f5)

# release 0.0.6

* Complete refactor (see the README). (e626975)
* Rename selector selectedPagination to selectPagination. (lasy-loading) (9a862bb)
* Fix pagesCount when the number of items is a multiple of pageSize. (c57acd0)

## Breaking changes

Use of NgbrxPaginatorModule.forFeature to simplify the API.

# release 0.0.5
.
* Add pageSizeOptions as Input to ngbrx-paginator component. (fc212d2)
* Remove 'lib-' from template selector. (3dd0685)
* Update README. (14a0334)
* License is MIT. (0051390)
* Add ref to the demo. (b9bd190)
* Remove tslib dependency. (69aa9b5)
* Fix dependencies. (3fd8ce4)
* yarn install --upgrade (e882afc)
* ng update @angular/cli @angular/core -> 16.1.3. (ec43200)
* Add filter to count of items (commues, departements). (958d054)
* Do not dispatch setPage if current page. (8a3f680)
* Indentation. (2ebe3ca)
* Set default pageSize to 20. (184805c)
* Add typing to pagination actions handlers. (537ad29)
* Add README. (96c0f5a)
* Move some pagination selectors to paginator.ts. (9187e67)
* Remove effects and simplify pagination interface and actions. (03f2455)
* les reducers sont appelés directement depuis la fonction issue de paginatori (9b04adb)
* paginator propose createFilteredEffect (e184f68)
* Split ActionsGroup and PaginationActions. (b9ab823)
* Add module commune. Simplify declaration of actions and reducers. (ac38077)
* Module departement is paginated. (85ea00f)
* Add collection$ to departement component. (fea3e27)
* Load departements. (da7a1e7)
* Add commune and departement modules to test-paginator app. Add featureStore to departement module. (280151f)
* ng g st AppState... (f44b6ed)
* Add test app. (dfaa005)

# release 0.0.1

* ng g lib ngbrx-paginator (da32ab4)
* ng update @angular/cli -> 16.1.0. (798b8db)
* Empty workspace (0ba0670)
